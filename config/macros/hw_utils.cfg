# DO NOT EDIT THIS FILE.
# This file is part of a git repository, your changes may prevent updates

[gcode_macro _SET_ACCEL]
gcode:
    {% set printer_config = printer.configfile.settings['printer'] %}
    {% set s = params.ACCEL|default(printer_config.max_accel)|float %}
    SET_VELOCITY_LIMIT ACCEL={s}

[gcode_macro _RAISE_Z]
description: Drop the bed by AMOUNT to prevent dragging
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = curr_z + params.AMOUNT|default(10)|float %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro _CLEAR_Z]
description: Drop Z by at least up to AMOUNT to leave room for stuff
gcode:
    {% set curr_z = printer.toolhead.position.z %}
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set target_z = [curr_z, params.AMOUNT|default(10)|float]|max %}

    G90 ; absolute
    G1 Z { [target_z, max_z]|min }

[gcode_macro ENABLE_FILAMENT_SENSORS]
gcode:
    ENABLE_FILAMENT_WIDTH_SENSOR
    RESET_FILAMENT_WIDTH_SENSOR
    query_filament_width
    SET_FILAMENT_SENSOR SENSOR=tangle ENABLE=1

[gcode_macro DISABLE_FILAMENT_SENSORS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=tangle ENABLE=0
    DISABLE_FILAMENT_WIDTH_SENSOR

[gcode_macro DISABLE_FANS_AND_HEATERS]
gcode:
    M106 P2 S0
    M106 P0 S0
    M106 P3 S0

    M104 S0
    M140 S0
    M141 S0

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for iteration in range(i|int) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{dur}
            SET_PIN PIN=beeper VALUE=0
            G4 P{dur}
        {% endfor %}
    {% endif %}

[gcode_macro M141]
description: set chamber heater temperature
gcode:
    {% set s = params.S|float %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={([s, 60]|min)}

[gcode_macro M191]
description: wait for chamber to reach temperature
gcode:
    #Parameters
    {% set s = params.S|float %}

    M141 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={([s, 60]|min)-2} #MAXIMUM={s+1}
    {% endif %}

[gcode_macro M106]
description: set fan speed (aux/cooling/circulation)
gcode:
    {% set p = params.P|default(0)|int %}

    {% if p == 2 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=auxiliary_cooling_fan SPEED=1
    {% endif %}
    {% endif %}

    {% if p == 0 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=cooling_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=cooling_fan SPEED=1
    {% endif %}
    {% endif %}

    {% if p == 3 %}
    {% if params.S is defined %}
        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED={(params.S|float / 255.0)}
    {% else %}
        SET_FAN_SPEED FAN=chamber_circulation_fan SPEED=1
    {% endif %}
    {% endif %}

[gcode_macro M107]
description: stop cooling fan speed
gcode:
    SET_FAN_SPEED FAN=cooling_fan SPEED=0

